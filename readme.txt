iidx_difficulty.py（制作・調整途中）

難易度判定ツール。
先に「iidx_read.py」等を使って譜面データ(テキストファイル)を「score/SP/」の下に用意してください。

1. series:
    調べたい曲が入っているバージョンを1~26の数字で入力。
2. 1. ---
   2. ---
   ...
   ...:
    調べたい曲に該当する番号を入力。
3. (y/n):
    Yes or No
    間違いなければ「y」を入力。
4. style option([N]ormal-mirror, r[A]ndom, [R]-random, [S]-random):
   guage option([N]ormal, [E]asy, [H]ard, e[X]-hard):
   number of times(1~):
    オプション、回数の設定。
    それぞれアルファベット、数字で入力。
    

////////////////////////

以下、メモ書きのようなもの


難易度...
    クリアに必要な能力として
    ・認識力(動体視力、集中力、気力)
    ・打鍵力(筋力、体力)
    の2つを主軸とする

プレイヤーの能力値を設定し、曲の進行に伴うゲージ推移をシミュレートする。

対象ノーツに対し、その前後のノーツの配置をもとに「押せる/押せない」を判定し、ゲージを増減させる。
曲の最初から最後まですべてのノーツに対してこの判定を行う。


打鍵力->対象ノーツより前を参照
    基本的には対象ノーツの「押しづらさ」を算出する方針。
    
    縦連はもっとも難易度が上がりやすい。
    その間隔が狭くなるほど押しづらさは単調増加するという計算。
    
    隣接トリル・桂馬トリル・階段は速さによっては難易度が上がる。
    およそ8.33f(大体BPM180の16分)の間隔で降ってくるのが一番押しづらくなるものとした。
    それより速いと餡蜜で処理しやすくなるため。
    
    皿は1P側1,2,3鍵と絡むと難易度が上がるが、状況に応じて片手処理ができるものとした。
    
    CNについては、ひとまず捨てノーツは考えないものとした。
    トリル、階段の場合とほぼ同じような計算を施す。
    
    HCNは未実装。
    
認識力->対象ノーツより後を参照
    未実装。
    
